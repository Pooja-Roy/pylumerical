'''
Processing .csv output from Lumerical FDTD Solution 

Author : Mark S. Brown
Started : 16th Jan 2014

Description : In this module we will collect functions for loading, processing
and plotting data generated by Lumerical
'''

from __future__ import division,print_function
import re
import os
from pandas import Series

def parsefilename(fn):
    '''
    Splits given filename generated by _pylumerical.py_ into pandas Series objects
    '''

    variables, csvtype = fn.split('.fsp')
    
    Params = dict(param.split('=') for param in variables.split('_'))
    
    expr=r'E|Er|Etheta|Ephi|ux|uy|power'
    def getusefulbit(astr):
        p = re.compile(expr)
        m = re.search(p,astr)
        if m:
            return m.group()
    
    toReturn = Series(Params.values()+[getusefulbit(csvtype)],index=Params.keys()+['csvtype'])
    return toReturn

def fetchparsednames(lsfloc, verbose=0):
    '''
    Return list of dicts parsing filenames
    '''
    return [dict(parsefilename(fn).items(),fileloc=os.path.join(lsfloc,fn))
                for fn in os.listdir(lsfloc)]
